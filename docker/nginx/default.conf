server {
  listen       80;
  server_name  api.localhost.com;
  root         /var/www/html;

  proxy_set_header    Host    $host;
  proxy_set_header    X-Real-IP    $remote_addr;
  proxy_set_header    X-Forwarded-Host       $host;
  proxy_set_header    X-Forwarded-Server    $host;
  proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;


  location / {
    proxy_pass http://host.docker.internal:5000;
  }
}

server {
  # listen       80;
  listen 443 ssl;
  server_name  wettyproxy.localhost.com;
  root         /var/www/html;

  ssl_certificate     /etc/nginx/ssl/server.crt;
  ssl_certificate_key /etc/nginx/ssl/server.key;

  proxy_set_header    Host    $host;
  proxy_set_header    X-Real-IP    $remote_addr;
  proxy_set_header    X-Forwarded-Host       $host;
  proxy_set_header    X-Forwarded-Server    $host;
  proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;


  # location / {
  #   set $port "";
  #   default_type 'text/plain';
  #   rewrite_by_lua '
  #       local res = ngx.location.capture("/redis?key=" .. ngx.var.arg_key)
  #       if res.status == ngx.HTTP_OK then
  #         ngx.var.port  = res.body
  #       else
  #         ngx.say("faild!!!")
  #         ngx.exit(ngx.HTTP_FORBIDDEN)
  #       end
  #   ';

  #   resolver 127.0.0.11;
  #   add_header X-Frame-Options http://localhost:3000;
  #   add_header Port $port;
  #   proxy_pass http://host.docker.internal:$port;
  # }


  location / {
  default_type 'text/plain';

  resolver 127.0.0.11;
  add_header X-Frame-Options http://localhost:3000;

  proxy_pass http://host.docker.internal:$cookie_port;
 }

  location /shell {
    set $port "";
    default_type 'text/plain';
    rewrite_by_lua '
        local res = ngx.location.capture("/redis?key=" .. ngx.var.arg_key)
        if res.status == ngx.HTTP_OK then
          ngx.var.port  = res.body
        else
          ngx.say("faild!!!")
          ngx.exit(ngx.HTTP_FORBIDDEN)
        end
    ';

    resolver 127.0.0.11;
    add_header X-Frame-Options http://localhost:3000;
    # このsecureをつけるためにはhttpsでの接続が必要
    add_header Set-Cookie "port=8888; path=/; SameSite=None; Secure";
    rewrite ^(.*)$ http://wettyproxy.localhost.com permanent;
  }


  location /redis {
    internal;
    set            $redis_key $arg_key;
    redis_pass     host.docker.internal:6379;
    default_type   text/html;
  }

}


